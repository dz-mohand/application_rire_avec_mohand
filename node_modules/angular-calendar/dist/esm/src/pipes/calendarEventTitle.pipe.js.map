{"version":3,"file":"calendarEventTitle.pipe.js","sourceRoot":"","sources":["../../../../src/pipes/calendarEventTitle.pipe.ts"],"names":[],"mappings":"OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe;OAE5C,EAAE,2BAA2B,EAAE,MAAM,0CAA0C;AAGtF;IAEE,4BAAoB,kBAA+C;QAA/C,uBAAkB,GAAlB,kBAAkB,CAA6B;IAAG,CAAC;IAEvE,sCAAS,GAAT,UAAU,KAAoB,EAAE,SAAiB;QAC/C,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAEI,6BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACnB,IAAI,EAAE,oBAAoB;iBAC3B,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,iCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,2BAA2B,GAAG;KACpC,EAF6F,CAE7F,CAAC;IACF,yBAAC;AAAD,CAAC,AAjBD,IAiBC","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { CalendarEventTitleFormatter } from '../providers/calendarEventTitle.provider';\n\n\nexport class CalendarEventTitle implements PipeTransform {\n\n  constructor(private calendarEventTitle: CalendarEventTitleFormatter) {}\n\n  transform(event: CalendarEvent, titleType: string): string {\n    return this.calendarEventTitle[titleType](event);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'calendarEventTitle'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CalendarEventTitleFormatter, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}